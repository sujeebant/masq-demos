{"version":3,"sources":["../../../masq-lib/src/index.js","../../../masq-lib/config/config.js","icons/Search.js","components/SearchBar.jsx","App.jsx","registerServiceWorker.js","index.js"],"names":["Buffer","_regeneratorRuntime","__webpack_require__","_asyncToGenerator","_classCallCheck","_createClass","swarm","signalhub","uuidv4","pump","common","config","debug","createSwarm","hub","swOpts","WEBRTC_SUPPORT","wrtc","SWARM_CONFIG","console","log","JSON","stringify","Masq","appName","appDescription","appImageURL","this","_reset","userId","userAppDb","_loadSessionInfo","loginChannel","loginKey","loginUrl","key","value","userAppRepSW","userAppRepHub","_logIntoMasqErr","_logIntoMasqDone","_connectToMasq","mark","_callee","db","wrap","_context","prev","next","isLoggedIn","_disconnect","Error","utils","createPromisifiedHyperDB","dbReady","_startReplication","stop","apply","arguments","_disconnect2","_callee2","_this","_context2","Promise","resolve","close","_deleteSessionInfo","_signout","_callee3","_context3","deleteLocal","window","localStorage","removeItem","sessionStorage","stayConnected","setItem","sessionUserId","getItem","localStorageUserId","_initSwarmWithDataHandler2","_callee4","channel","dataHandler","_context4","abrupt","reject","concat","HUB_URLS","sw","on","peer","id","data","_x","_x2","_this2","discoveryKey","toString","_ref","_callee5","stream","_context5","replicate","live","_x3","_x4","_isRegistered2","_callee6","_context6","dbExists","_x5","_requestUserAppRegister2","_callee7","msg","encryptedMsg","_context7","name","description","imageURL","crypto","encrypt","sent","send","_x6","_x7","_requestWriteAccess2","_callee8","encryptionKey","localDbKey","_context8","_x8","_x9","_x10","_sendConnectionEstablished2","_callee9","_context9","_x11","_x12","json","registering","waitingForWriteAccess","errorHandler","err","handleError","userAppDbId","_getLoginLink","_callee10","extractedKey","keyBase64","hashParams","_context10","genAESKey","exportKey","from","URL","MASQ_APP_BASE_URL","hash","href","_logIntoMasq","_callee12","handleData","_this3","_context12","signout","_ref2","_callee11","buffKey","_context11","decrypt","parse","t0","message","_checkMessage","t1","_isRegistered","_storeSessionInfo","connectToMasq","_sendConnectionEstablished","_requestUserAppRegister","_requestWriteAccess","local","_x14","_x15","_x16","_initSwarmWithDataHandler","then","_onLogIntoMasqDone","undefined","_x13","cb","_getDB","watch","_get","_callee13","node","_context13","getAsync","_x17","_put","_callee14","_context14","putAsync","_x18","_x19","_del","_callee15","_context15","delAsync","_x20","_list","_callee16","prefix","list","reformattedDic","_context16","listAsync","reduce","dic","e","el","Array","isArray","_x21","module","exports","Search","props","react_default","a","createElement","Object","assign","height","viewBox","width","fill","d","SearchBar","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","query","openQwant","bind","assertThisInitialized","handleKeyPress","inputRef","React","createRef","current","focus","open","onSearch","downshift_esm","onStateChange","inputValue","setState","selectedItem","render","getInputProps","getItemProps","isOpen","highlightedIndex","className","onKeyUp","ref","placeholder","icons_Search","onClick","items","filter","i","includes","map","item","index","style","backgroundColor","fontWeight","Component","APP","App","loggedIn","link","loggingIn","masq","handleClickLogin","handleClickLogout","getAllQueriesFromDB","handleStayConnectedChange","itemsObj","queryList","keys","getLoginLink","find","get","nb","put","error","logIntoMasq","event","target","checked","_this$state","type","onChange","htmlFor","rel","lib","SearchBar_SearchBar","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","src_App_0","document","getElementById","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.5f9c3c4f.chunk.js","sourcesContent":["var _regeneratorRuntime = require(\"/home/sujeeban/Documents/Projects/masq/masq-demos/search/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/sujeeban/Documents/Projects/masq/masq-demos/search/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/home/sujeeban/Documents/Projects/masq/masq-demos/search/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/sujeeban/Documents/Projects/masq/masq-demos/search/node_modules/@babel/runtime/helpers/createClass\");\n\nvar swarm = require('webrtc-swarm');\n\nvar signalhub = require('signalhubws');\n\nvar uuidv4 = require('uuid/v4');\n\nvar pump = require('pump');\n\nvar common = require('masq-common');\n\nvar config = require('../config/config');\n\nvar debug = function () {\n  switch (process.env.NODE_ENV) {\n    case 'development':\n      return console.log;\n\n    default:\n      return function () {};\n  }\n}();\n\nvar createSwarm = function createSwarm(hub) {\n  var swOpts = {};\n\n  if (swarm.WEBRTC_SUPPORT) {\n    swOpts.wrtc = require('wrtc');\n  }\n\n  swOpts.config = config.SWARM_CONFIG;\n  console.log(JSON.stringify(config));\n  return swarm(hub, swOpts);\n};\n\nvar Masq =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  /**\n   * constructor\n   * @param {string} appName - The application name\n   */\n  function Masq(appName, appDescription, appImageURL) {\n    _classCallCheck(this, Masq);\n\n    this._reset();\n\n    this.appName = appName;\n    this.appDescription = appDescription;\n    this.appImageURL = appImageURL;\n    this.userId = null;\n    this.userAppDb = null;\n\n    this._loadSessionInfo(); // login state data\n\n\n    this.loginChannel = null;\n    this.loginKey = null;\n    this.loginUrl = null;\n  }\n\n  _createClass(Masq, [{\n    key: \"_reset\",\n    value: function _reset() {\n      this.userAppRepSW = null;\n      this.userAppRepHub = null;\n      this._logIntoMasqErr = null;\n      this._logIntoMasqDone = false;\n    }\n  }, {\n    key: \"isLoggedIn\",\n    value: function isLoggedIn() {\n      // is logged in if the userAppDbId is known\n      // (either after register or after construction and load session info)\n      return !!this.userId;\n    }\n  }, {\n    key: \"isConnected\",\n    value: function isConnected() {\n      // is connected if the userAppDb has been created and initialized\n      return !!this.userAppDb;\n    }\n  }, {\n    key: \"connectToMasq\",\n    value: function () {\n      var _connectToMasq = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var db;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.isLoggedIn()) {\n                  _context.next = 4;\n                  break;\n                }\n\n                _context.next = 3;\n                return this._disconnect();\n\n              case 3:\n                throw Error('Not logged into Masq');\n\n              case 4:\n                db = common.utils.createPromisifiedHyperDB(this.userId);\n                this.userAppDb = db;\n                _context.next = 8;\n                return common.utils.dbReady(db);\n\n              case 8:\n                this._startReplication();\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function connectToMasq() {\n        return _connectToMasq.apply(this, arguments);\n      }\n\n      return connectToMasq;\n    }() // function useful to simulate the shutdown of a User-app\n\n  }, {\n    key: \"_disconnect\",\n    value: function () {\n      var _disconnect2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var _this = this;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return new Promise(function (resolve) {\n                  _this.userAppDb = null;\n\n                  if (!_this.userAppRepSW) {\n                    _this._reset();\n\n                    resolve();\n                    return;\n                  }\n\n                  _this.userAppRepSW.close(function () {\n                    _this._reset();\n\n                    resolve();\n                  });\n                });\n\n              case 2:\n                _context2.next = 4;\n                return this._deleteSessionInfo(false);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function _disconnect() {\n        return _disconnect2.apply(this, arguments);\n      }\n\n      return _disconnect;\n    }()\n  }, {\n    key: \"signout\",\n    value: function () {\n      var _signout = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.userId = null;\n                this.userAppDb = null;\n                _context3.next = 4;\n                return this._disconnect();\n\n              case 4:\n                this._deleteSessionInfo(true);\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function signout() {\n        return _signout.apply(this, arguments);\n      }\n\n      return signout;\n    }()\n  }, {\n    key: \"_deleteSessionInfo\",\n    value: function _deleteSessionInfo(deleteLocal) {\n      if (deleteLocal) {\n        window.localStorage.removeItem('userId');\n      }\n\n      window.sessionStorage.removeItem('userId');\n    }\n  }, {\n    key: \"_storeSessionInfo\",\n    value: function _storeSessionInfo(stayConnected, userId) {\n      if (stayConnected) {\n        window.localStorage.setItem('userId', userId);\n      }\n\n      window.sessionStorage.setItem('userId', userId);\n    }\n  }, {\n    key: \"_loadSessionInfo\",\n    value: function _loadSessionInfo() {\n      // If userId is in sesssion storage, use it and do not touch localStorage\n      var sessionUserId = window.sessionStorage.getItem('userId');\n\n      if (sessionUserId) {\n        this.userId = sessionUserId;\n        return;\n      } // if userId is is not in session storage, look for it in local storage\n      // and save in session storage\n\n\n      var localStorageUserId = window.localStorage.getItem('userId');\n\n      if (localStorageUserId) {\n        this.userId = localStorageUserId;\n        window.sessionStorage.setItem('userId', this.userId);\n      }\n    }\n  }, {\n    key: \"_initSwarmWithDataHandler\",\n    value: function () {\n      var _initSwarmWithDataHandler2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(channel, dataHandler) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                return _context4.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  // Subscribe to channel for a limited time to sync with masq\n                  debug(\"Creation of a hub with \".concat(channel, \" channel name\"));\n                  var hub = signalhub(channel, config.HUB_URLS);\n                  var sw = createSwarm(hub);\n                  console.log('channel init: ' + channel);\n                  sw.on('peer', function (peer, id) {\n                    debug(\"The peer \".concat(id, \" join us...\"));\n                    console.log('peer connected : ' + channel);\n                    peer.on('data', function (data) {\n                      dataHandler(sw, peer, data);\n                    });\n                  });\n                  sw.on('disconnect', function (peer, id) {\n                    sw.close();\n                  });\n                  sw.on('close', function () {\n                    resolve();\n                  });\n                }));\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function _initSwarmWithDataHandler(_x, _x2) {\n        return _initSwarmWithDataHandler2.apply(this, arguments);\n      }\n\n      return _initSwarmWithDataHandler;\n    }()\n  }, {\n    key: \"_startReplication\",\n    value: function _startReplication() {\n      var _this2 = this;\n\n      var discoveryKey = this.userAppDb.discoveryKey.toString('hex');\n      console.log('start replication : ' + discoveryKey);\n      this.userAppRepHub = signalhub(discoveryKey, config.HUB_URLS);\n      this.userAppRepSW = createSwarm(this.userAppRepHub);\n      this.userAppRepSW.on('peer',\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee5(peer, id) {\n          var stream;\n          return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  stream = _this2.userAppDb.replicate({\n                    live: true\n                  });\n                  pump(peer, stream, peer);\n\n                case 2:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5, this);\n        }));\n\n        return function (_x3, _x4) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n  }, {\n    key: \"_isRegistered\",\n    value: function () {\n      var _isRegistered2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(userId) {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                return _context6.abrupt(\"return\", common.utils.dbExists(userId));\n\n              case 1:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function _isRegistered(_x5) {\n        return _isRegistered2.apply(this, arguments);\n      }\n\n      return _isRegistered;\n    }()\n  }, {\n    key: \"_requestUserAppRegister\",\n    value: function () {\n      var _requestUserAppRegister2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(key, peer) {\n        var msg, encryptedMsg;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                msg = {\n                  msg: 'registerUserApp',\n                  name: this.appName,\n                  description: this.appDescription,\n                  imageURL: this.appImageURL\n                };\n                _context7.next = 3;\n                return common.crypto.encrypt(key, msg, 'base64');\n\n              case 3:\n                encryptedMsg = _context7.sent;\n                peer.send(JSON.stringify(encryptedMsg));\n\n              case 5:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function _requestUserAppRegister(_x6, _x7) {\n        return _requestUserAppRegister2.apply(this, arguments);\n      }\n\n      return _requestUserAppRegister;\n    }()\n  }, {\n    key: \"_requestWriteAccess\",\n    value: function () {\n      var _requestWriteAccess2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee8(encryptionKey, peer, localDbKey) {\n        var msg, encryptedMsg;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                msg = {\n                  msg: 'requestWriteAccess',\n                  key: localDbKey.toString('hex')\n                };\n                _context8.next = 3;\n                return common.crypto.encrypt(encryptionKey, msg, 'base64');\n\n              case 3:\n                encryptedMsg = _context8.sent;\n                peer.send(JSON.stringify(encryptedMsg));\n\n              case 5:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function _requestWriteAccess(_x8, _x9, _x10) {\n        return _requestWriteAccess2.apply(this, arguments);\n      }\n\n      return _requestWriteAccess;\n    }()\n  }, {\n    key: \"_sendConnectionEstablished\",\n    value: function () {\n      var _sendConnectionEstablished2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee9(key, peer) {\n        var msg, encryptedMsg;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                msg = {\n                  msg: 'connectionEstablished'\n                };\n                _context9.next = 3;\n                return common.crypto.encrypt(key, msg, 'base64');\n\n              case 3:\n                encryptedMsg = _context9.sent;\n                peer.send(JSON.stringify(encryptedMsg));\n\n              case 5:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function _sendConnectionEstablished(_x11, _x12) {\n        return _sendConnectionEstablished2.apply(this, arguments);\n      }\n\n      return _sendConnectionEstablished;\n    }() // All error handling for received messages\n\n  }, {\n    key: \"_checkMessage\",\n    value: function _checkMessage(json, registering, waitingForWriteAccess, errorHandler) {\n      var err = false;\n\n      var handleError = function handleError() {\n        errorHandler();\n        err = true;\n      };\n\n      switch (json.msg) {\n        case 'authorized':\n          if (!json.userAppDbId) {\n            handleError('User Id not found in \\'authorized\\' message');\n          }\n\n          break;\n\n        case 'notAuthorized':\n          break;\n\n        case 'masqAccessGranted':\n          if (!registering) {\n            handleError('Unexpectedly received \"masqAccessGranted\" message while not registering');\n            break;\n          }\n\n          if (!json.key) {\n            handleError('Database key not found in \"masqAccessGranted\" message');\n            break;\n          }\n\n          if (!json.userAppDbId) {\n            handleError('User Id not found in \"masqAccessGranted\" message');\n          }\n\n          break;\n\n        case 'masqAccessRefused':\n          if (!registering) {\n            handleError('Unexpectedly received \"masqAccessRefused\" while not registering');\n          }\n\n          break;\n\n        case 'writeAccessGranted':\n          if (!waitingForWriteAccess) {\n            handleError('Unexpectedly received \"writeAccessGranted\" while not waiting for write access');\n          }\n\n          break;\n\n        default:\n          handleError(\"Unexpectedly received message with type \".concat(json.msg));\n          break;\n      }\n\n      return err;\n    }\n  }, {\n    key: \"getLoginLink\",\n    value: function () {\n      var _getLoginLink = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee10() {\n        var extractedKey, keyBase64, requestType, hashParams;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                this.loginChannel = uuidv4();\n                _context10.next = 3;\n                return common.crypto.genAESKey(true, 'AES-GCM', 128);\n\n              case 3:\n                this.loginKey = _context10.sent;\n                _context10.next = 6;\n                return common.crypto.exportKey(this.loginKey);\n\n              case 6:\n                extractedKey = _context10.sent;\n                keyBase64 = Buffer.from(extractedKey).toString('base64');\n                this.loginUrl = new URL(config.MASQ_APP_BASE_URL);\n                requestType = 'login';\n                console.log('channel : ' + this.loginChannel);\n                console.log('key : ' + keyBase64);\n                hashParams = JSON.stringify([this.appName, requestType, this.loginChannel, keyBase64]);\n                this.loginUrl.hash = '/' + Buffer.from(hashParams).toString('base64');\n                return _context10.abrupt(\"return\", this.loginUrl.href);\n\n              case 15:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function getLoginLink() {\n        return _getLoginLink.apply(this, arguments);\n      }\n\n      return getLoginLink;\n    }()\n    /**\n     * If this is the first time, this.dbs.profiles is empty.\n     * We need to get masq-profiles hyperdb key of masq.\n     * @returns {string, string, string}\n     *  link - the link to open the masq app with the right\n     */\n\n  }, {\n    key: \"logIntoMasq\",\n    value: function () {\n      var _logIntoMasq = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee12(stayConnected) {\n        var _this3 = this;\n\n        var channel, key, registering, waitingForWriteAccess, userId, db, handleData;\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                // logout if loggedin when called\n                if (this.userId) {\n                  this.signout();\n                } // make stayConnected a boolean\n\n\n                stayConnected = !!stayConnected; // get login channel and key created at login link generation\n\n                channel = this.loginChannel;\n                key = this.loginKey;\n                registering = false;\n                waitingForWriteAccess = false;\n\n                handleData =\n                /*#__PURE__*/\n                function () {\n                  var _ref2 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee11(sw, peer, data) {\n                    var handleError, json, buffKey;\n                    return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n                      while (1) {\n                        switch (_context11.prev = _context11.next) {\n                          case 0:\n                            handleError = function handleError(msg) {\n                              _this3._logIntoMasqErr = Error(msg);\n                              sw.close();\n                            }; // decrypt the received message and check if the right key has been used\n\n\n                            _context11.prev = 1;\n                            _context11.next = 4;\n                            return common.crypto.decrypt(key, JSON.parse(data), 'base64');\n\n                          case 4:\n                            json = _context11.sent;\n                            _context11.next = 14;\n                            break;\n\n                          case 7:\n                            _context11.prev = 7;\n                            _context11.t0 = _context11[\"catch\"](1);\n\n                            if (!(_context11.t0.message === 'Unsupported state or unable to authenticate data')) {\n                              _context11.next = 12;\n                              break;\n                            }\n\n                            handleError('Unable to read the message with the key sent to Masq-app');\n                            return _context11.abrupt(\"return\");\n\n                          case 12:\n                            handleError('Unknown error while decrypting: ' + _context11.t0.message);\n                            return _context11.abrupt(\"return\");\n\n                          case 14:\n                            _this3._checkMessage(json, registering, waitingForWriteAccess, handleError);\n\n                            console.log('lib: message: ' + JSON.stringify(json));\n                            _context11.t1 = json.msg;\n                            _context11.next = _context11.t1 === 'authorized' ? 19 : _context11.t1 === 'notAuthorized' ? 34 : _context11.t1 === 'masqAccessGranted' ? 37 : _context11.t1 === 'masqAccessRefused' ? 45 : _context11.t1 === 'writeAccessGranted' ? 48 : 55;\n                            break;\n\n                          case 19:\n                            userId = json.userAppDbId; // Check if the User-app is already registered\n\n                            _context11.next = 22;\n                            return _this3._isRegistered(userId);\n\n                          case 22:\n                            if (!_context11.sent) {\n                              _context11.next = 31;\n                              break;\n                            }\n\n                            _this3.userId = userId; // Store the session info\n\n                            _this3._storeSessionInfo(stayConnected, userId);\n\n                            _context11.next = 27;\n                            return _this3.connectToMasq();\n\n                          case 27:\n                            _context11.next = 29;\n                            return _this3._sendConnectionEstablished(key, peer);\n\n                          case 29:\n                            sw.close();\n                            return _context11.abrupt(\"return\");\n\n                          case 31:\n                            // if this UserApp instance is not registered\n                            registering = true;\n\n                            _this3._requestUserAppRegister(key, peer);\n\n                            return _context11.abrupt(\"break\", 55);\n\n                          case 34:\n                            // if this User-app is not registered\n                            registering = true;\n\n                            _this3._requestUserAppRegister(key, peer);\n\n                            return _context11.abrupt(\"break\", 55);\n\n                          case 37:\n                            registering = false;\n                            buffKey = Buffer.from(json.key, 'hex');\n                            db = common.utils.createPromisifiedHyperDB(userId, buffKey);\n                            _context11.next = 42;\n                            return common.utils.dbReady(db);\n\n                          case 42:\n                            waitingForWriteAccess = true;\n\n                            _this3._requestWriteAccess(key, peer, db.local.key);\n\n                            return _context11.abrupt(\"break\", 55);\n\n                          case 45:\n                            registering = false;\n                            handleError('Masq access refused by the user');\n                            return _context11.abrupt(\"return\");\n\n                          case 48:\n                            waitingForWriteAccess = false; // Store the session info\n\n                            _this3._storeSessionInfo(stayConnected, userId);\n\n                            _this3.userId = userId;\n                            _this3.userAppDb = db;\n\n                            _this3._startReplication();\n\n                            sw.close();\n                            return _context11.abrupt(\"break\", 55);\n\n                          case 55:\n                          case \"end\":\n                            return _context11.stop();\n                        }\n                      }\n                    }, _callee11, this, [[1, 7]]);\n                  }));\n\n                  return function handleData(_x14, _x15, _x16) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }();\n\n                this._initSwarmWithDataHandler(channel, handleData).then(function () {\n                  _this3._logIntoMasqDone = true;\n                  if (_this3._onLogIntoMasqDone) _this3._onLogIntoMasqDone();\n                });\n\n                return _context12.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  if (_this3._logIntoMasqDone) {\n                    _this3._logIntoMasqDone = false;\n\n                    if (_this3._logIntoMasqErr) {\n                      return reject(_this3._logIntoMasqErr);\n                    } else {\n                      return resolve();\n                    }\n                  }\n\n                  _this3._onLogIntoMasqDone = function () {\n                    _this3._onLogIntoMasqDone = undefined;\n                    _this3._logIntoMasqDone = false;\n\n                    if (_this3._logIntoMasqErr) {\n                      return reject(_this3._logIntoMasqErr);\n                    } else {\n                      return resolve();\n                    }\n                  };\n                }));\n\n              case 9:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function logIntoMasq(_x13) {\n        return _logIntoMasq.apply(this, arguments);\n      }\n\n      return logIntoMasq;\n    }() //\n    // Database Access Functions\n    //\n\n  }, {\n    key: \"_getDB\",\n    value: function _getDB() {\n      if (!this.userAppDb) throw Error('Not connected to Masq');\n      return this.userAppDb;\n    }\n    /**\n     * Set a watcher\n     * @param {string} key - Key\n     * @returns {Object}\n     */\n\n  }, {\n    key: \"watch\",\n    value: function watch(key, cb) {\n      var db = this._getDB();\n\n      return db.watch(key, function () {\n        return cb();\n      });\n    }\n    /**\n     * Get a value\n     * @param {string} key - Key\n     * @returns {Promise}\n     */\n\n  }, {\n    key: \"get\",\n    value: function () {\n      var _get = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee13(key) {\n        var db, node;\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                db = this._getDB();\n                _context13.next = 3;\n                return db.getAsync(key);\n\n              case 3:\n                node = _context13.sent;\n\n                if (node) {\n                  _context13.next = 6;\n                  break;\n                }\n\n                return _context13.abrupt(\"return\", null);\n\n              case 6:\n                return _context13.abrupt(\"return\", node.value);\n\n              case 7:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function get(_x17) {\n        return _get.apply(this, arguments);\n      }\n\n      return get;\n    }()\n    /**\n     * Put a new value in the current profile database\n     * @param {string} key - Key\n     * @param {string} value - The value to insert\n     * @returns {Promise}\n     */\n\n  }, {\n    key: \"put\",\n    value: function () {\n      var _put = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee14(key, value) {\n        var db;\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                db = this._getDB();\n                return _context14.abrupt(\"return\", db.putAsync(key, value));\n\n              case 2:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function put(_x18, _x19) {\n        return _put.apply(this, arguments);\n      }\n\n      return put;\n    }()\n    /**\n     * Delete a key\n     * @param {string} key - Key\n     * @returns {Promise}\n     */\n\n  }, {\n    key: \"del\",\n    value: function () {\n      var _del = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee15(key) {\n        var db;\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                db = this._getDB();\n                return _context15.abrupt(\"return\", db.delAsync(key));\n\n              case 2:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function del(_x20) {\n        return _del.apply(this, arguments);\n      }\n\n      return del;\n    }()\n    /**\n     * List all keys and values\n     * @param {string} prefix - Prefix\n     * @returns {Promise}\n     */\n\n  }, {\n    key: \"list\",\n    value: function () {\n      var _list = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee16(prefix) {\n        var db, list, reformattedDic;\n        return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                db = this._getDB();\n                _context16.next = 3;\n                return db.listAsync(prefix);\n\n              case 3:\n                list = _context16.sent;\n                reformattedDic = list.reduce(function (dic, e) {\n                  var el = Array.isArray(e) ? e[0] : e;\n                  dic[el.key] = el.value;\n                  return dic;\n                }, {});\n                return _context16.abrupt(\"return\", reformattedDic);\n\n              case 6:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n\n      function list(_x21) {\n        return _list.apply(this, arguments);\n      }\n\n      return list;\n    }()\n  }]);\n\n  return Masq;\n}();\n\nmodule.exports = Masq;","var config = {};\n\nswitch (process.env.NODE_ENV) {\n  case 'development':\n  case 'test':\n    console.log('dev');\n    config = require('./config.dev.json');\n    break;\n\n  default:\n    console.log('prod');\n    config = require('./config.prod.json');\n}\n\nmodule.exports = config;","import React from 'react'\n\nconst Search = props => (\n  <svg height={24} viewBox='0 0 24 24' width={24} {...props}>\n    <path fill='currentColor' d='M15.5 14h-.79l-.28-.27A6.471 6.471 0 0 0 16 9.5 6.5 6.5 0 1 0 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z' />\n    <path d='M0 0h24v24H0z' fill='none' />\n  </svg>\n)\n\nexport default Search\n","import React from 'react'\nimport Downshift from 'downshift'\n\nimport Search from '../icons/Search'\n\nexport default class SearchBar extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      query: ''\n    }\n    this.openQwant = this.openQwant.bind(this)\n    this.handleKeyPress = this.handleKeyPress.bind(this)\n    this.inputRef = React.createRef()\n  }\n\n  componentDidMount () {\n    this.inputRef.current.focus()\n  }\n\n  openQwant () {\n    window.open('https://www.qwant.com/?q=' + this.state.query)\n  }\n\n  handleKeyPress (e) {\n    if (e.key !== 'Enter') { return }\n\n    if (this.props.onSearch) {\n      this.props.onSearch(this.state.query)\n    }\n    this.openQwant()\n  }\n\n  render () {\n    return (\n      <Downshift\n        onStateChange={({ inputValue }) => {\n          return inputValue && this.setState({ query: inputValue })\n        }}\n        selectedItem={this.state.query}\n        render={({\n          getInputProps,\n          getItemProps,\n          isOpen,\n          inputValue,\n          highlightedIndex,\n          selectedItem\n        }) => (\n          <div className='SearchBar'>\n            <div>\n              <input {...getInputProps({\n                onKeyUp: this.handleKeyPress\n              })} className='input' ref={this.inputRef} placeholder='What are you looking for?' />\n              <Search onClick={this.openQwant} className='icon' />\n            </div>\n\n            {isOpen &&\n              <div className='downshift'>\n                {this.props.items\n                  .filter(i => !inputValue || i.includes(inputValue))\n                  .map((item, index) => (\n                    <div\n                      className='downshiftRow'\n                      {...getItemProps({\n                        key: index,\n                        index,\n                        item,\n                        style: {\n                          backgroundColor: highlightedIndex === index ? 'lightgray' : 'white',\n                          fontWeight: selectedItem === item ? 'bold' : 'normal'\n                        }\n                      })}\n                    >\n                      {item}\n                    </div>\n                  ))}\n              </div>\n            }\n          </div>\n        )}\n      />\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Masq from 'masq-lib'\nimport * as QRCode from 'qrcode.react'\n\nimport SearchBar from './components/SearchBar'\n\nimport './App.css'\n\nconst APP = {\n  name: 'Qwant Search',\n  description: 'Qwant Search app integrated with Masq',\n  image: 'https://qwant.com/img/v4/home-banner.svg?1542966874062',\n  imageURL: 'https://fr.wikipedia.org/wiki/Qwant#/media/File:Qwant_new_logo_2018.svg'\n}\n\n// function ConnectionStatus ({ isConnected }) {\n//   return isConnected\n//     ? <p style={{ color: 'green' }}>Connected to Masq</p>\n//     : <p style={{ color: 'red' }}>Disconnected from Masq</p>\n// }\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      items: [],\n      loggedIn: null,\n      err: null,\n      link: '#',\n      loggingIn: false,\n      stayConnected: false\n    }\n\n    this.masq = null\n    this.onSearch = this.onSearch.bind(this)\n    this.handleClickLogin = this.handleClickLogin.bind(this)\n    this.handleClickLogout = this.handleClickLogout.bind(this)\n    this.getAllQueriesFromDB = this.getAllQueriesFromDB.bind(this)\n    this.handleStayConnectedChange = this.handleStayConnectedChange.bind(this)\n  }\n\n  async getAllQueriesFromDB () {\n    // Retrieve existing keys, in order to\n    // retrieve items from the values stored in the DB\n    const itemsObj = await this.masq.list()\n    const queryList = Object.keys(itemsObj)\n    this.setState({ items: queryList })\n  }\n\n  async componentDidMount () {\n    this.masq = new Masq(APP.name, APP.description, APP.imageURL)\n\n    try {\n      if (this.masq.isLoggedIn()) {\n        await this.masq.connectToMasq()\n        this.setState({ loggedIn: true })\n        await this.getAllQueriesFromDB()\n      } else {\n        const link = await this.masq.getLoginLink()\n        this.setState({\n          link,\n          loggedIn: false\n        })\n      }\n    } catch (err) {\n      this.setState({ err })\n    }\n  }\n\n  async onSearch (query) {\n    if (!this.state.loggedIn) {\n      return\n    }\n\n    // return if the query is already in the history\n    if (this.state.items.find(i => i === query)) {\n      const nb = await this.masq.get(query)\n      await this.masq.put(query, nb + 1)\n      return\n    }\n\n    const items = [...this.state.items, query]\n    try {\n      // We create one key in DB per search item instead\n      // of updating an array\n      await this.masq.put(query, 1)\n      this.setState({ items })\n    } catch (e) {\n      console.error(e.message)\n    }\n  }\n\n  async handleClickLogin () {\n    if (!this.state.link) {\n      return\n    }\n\n    this.setState({ loggingIn: true })\n    try {\n      await this.masq.logIntoMasq(this.state.stayConnected)\n      this.setState({ loggedIn: true })\n      await this.getAllQueriesFromDB()\n    } catch (e) {\n      console.error(e)\n    }\n    this.setState({ loggingIn: false })\n  }\n\n  async handleClickLogout () {\n    const link = await this.masq.getLoginLink()\n\n    this.setState({\n      link,\n      loggedIn: false,\n      items: []\n    })\n\n    await this.masq.signout()\n  }\n\n  async handleStayConnectedChange (event) {\n    const target = event.target\n    const stayConnected = target.checked\n    this.setState({ stayConnected })\n  }\n\n  render () {\n    const { items, loggedIn, link, loggingIn } = this.state\n    return (\n      <div className='App'>\n        {loggedIn === null && !loggingIn && <div href='#'>Loading</div>}\n        {loggedIn === false && !loggingIn && (\n          <div className='Login'>\n            <div className='stayConnected'>\n              <input\n                name=\"stayConnected\"\n                type=\"checkbox\"\n                checked={this.state.stayConnected}\n                onChange={this.handleStayConnectedChange} />\n              <label htmlFor='stayConnected'>stay connected</label>\n            </div>\n            <a\n              href={link}\n              target='_blank'\n              rel=\"noopener noreferrer\"\n              onClick={this.handleClickLogin}\n            >Log Into Masq\n            </a>\n            <QRCode value={link}/>\n          </div>\n        )}\n        {loggedIn && !loggingIn && <a href='#' onClick={this.handleClickLogout}>Logout</a>}\n        {loggingIn && <div>Logging In</div>}\n        <SearchBar onSearch={this.onSearch} items={items} />\n      </div>\n    )\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport default function register () {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new window.URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  window.fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport registerServiceWorker from './registerServiceWorker'\n\nimport 'typeface-roboto'\n\nReactDOM.render(<App />, document.getElementById('root'))\nregisterServiceWorker()\n"],"sourceRoot":""}